Заглушки
Будем выделять 4 осн. группы заглушек:
1. Dummy объекты. Это пустые объекты, которые передаются в вызываемые внутренние методы, но не используются.
Они предназначены лишь для заполнения параметров методов. т. е. dummy объект необходимо научить в ответ на запрос
выполнить некий простой код. Как правило, выделяют некий интерфейс, который реализует класс и доп. класс
для заглушек. Похожим образом работают fake объекты. Они имеют работающие реализации, но в таком виде, который
делает их не подходящими для продакшн кода.
    При unit тестировании создается объект феййкового класса и передается в тестирующий метод через интерфейс.
2. Stub объекты предоставляют заранее подготовленные ответы на вызовы во время выполнения теста и не отвечают ни
на какие другие вызовы, которые не треб. в тесте. Они могут запоминать некоторую доп. информацию о кл-вах вызовов,
параметров вызова, а также возвр. эту инф. тесту на проверку. Реализуется через интерфейс.
3. Mock объекты, или, умные заглушки. Они заменяют реальный оюъект в условиях теста и позволяют проверять вызовы
своих членов как часть системы unit теста. Содержат заранее запрограммированные вызовов. Т. е. они не просто возвр.
предуст. данные но и записывают все вызовы, которые проходят через этот объект для того, чтобы в unit тесте
проверить, что именно эти методы классов были вызваны. Как правило, Mock объекты применяются в интеграционном
тестировании.

Разница между Stub и Mock:
Stub не влияет на test, в отличие от mock

Разобъем весь перечень на сл. категории:
1. Изолирующие каркасы
2. Каркасы тестирования
    а) исполнители тестов и API тестирования
3. Вспомогательные ср-ва тестирования
4. Тестирования работы с БД

Изолирующие караксы (или каркасы подставных объектов)
Пример: Moq, Renamox, takeInEasy, JustMoq, MS Fakes

Каркасы тестирования
Каркасы тестирования предлагают функциональность двух типов:
    Исполнители тестов
    (mstest, TestDriven.net, resharper, ContiniousTest)

    API тестирование
    (включает атрибуты и базовые классы)
    (nunit.framework, MSTest)

Тестирование работы с БД представляет собой интеграционный тест для уровня данных, т.е. для той части приложения
к которой идет БД.
